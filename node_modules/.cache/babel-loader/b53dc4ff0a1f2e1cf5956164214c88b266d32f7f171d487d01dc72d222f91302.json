{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\e-dashboard\\\\front-end\\\\src\\\\components\\\\VoteAsCand.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Voteascand = () => {\n  _s();\n  const userString = localStorage.getItem(\"user\");\n  const userObject = JSON.parse(userString);\n  const name = userObject.name;\n  const email = userObject.email;\n  const apartment_no = userObject.apartment_no;\n  const phone_no = userObject.phone_no;\n  const navigate = useNavigate();\n  const [pitch, setPitch] = useState(\"\");\n  const handleregister = async () => {\n    const votedcandidate = userObject.name;\n    let result = await fetch('http://localhost:5000/voteascand', {\n      method: 'POST',\n      body: JSON.stringify({\n        name,\n        email,\n        phone_no,\n        apartment_no,\n        votedcandidate,\n        pitch\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log(result);\n    alert(\"You are Registered as a Candidate\");\n    navigate('/events');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"tag\",\n        children: [\"Hello, \", name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register as a Candidate:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"inputboxpitch\",\n          type: \"text\",\n          placeholder: \"Enter your Pitch here\",\n          value: pitch,\n          onChange: e => setPitch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleregister,\n          className: \"button\",\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Voteascand, \"HqUrnHWVd7j1r56U21Y4ek3s6Jo=\", false, function () {\n  return [useNavigate];\n});\n_c = Voteascand;\nexport default Voteascand;\nvar _c;\n$RefreshReg$(_c, \"Voteascand\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Voteascand","_s","userString","localStorage","getItem","userObject","JSON","parse","name","email","apartment_no","phone_no","navigate","pitch","setPitch","handleregister","votedcandidate","result","fetch","method","body","stringify","headers","console","log","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/e-dashboard/front-end/src/components/VoteAsCand.js"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Voteascand=()=>{\r\n    const userString = localStorage.getItem(\"user\"); \r\n    const userObject = JSON.parse(userString); \r\n    const name = userObject.name;\r\n    const email = userObject.email;\r\n    const apartment_no = userObject.apartment_no;\r\n    const phone_no = userObject.phone_no;\r\n    \r\n\r\n    const navigate=useNavigate();\r\n    const [pitch,setPitch]=useState(\"\");\r\n\r\n\r\n    const handleregister=async()=>{\r\n        const votedcandidate = userObject.name;\r\n        let result=await fetch('http://localhost:5000/voteascand',{\r\n            method:'POST',\r\n            body:JSON.stringify({name,email,phone_no,apartment_no,votedcandidate,pitch}),\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        });\r\n        console.log(result);\r\n        alert(\"You are Registered as a Candidate\");\r\n        navigate('/events')\r\n    }\r\n    return(\r\n        <div>\r\n        <div>\r\n            <h1 className=\"tag\">Hello, {name} </h1>\r\n        </div>\r\n            {/* REGISTER AS A CANDIDATE */}\r\n            <div className=\"box\">\r\n                <h2>\r\n                    <br></br>\r\n                    <h1>Register as a Candidate:</h1>\r\n                    <textarea className=\"inputboxpitch\" type=\"text\" placeholder=\"Enter your Pitch here\"\r\n                        value={pitch} onChange={(e)=>setPitch(e.target.value)}/>\r\n                    <button onClick={handleregister} className=\"button\">SUBMIT</button>\r\n                </h2>   \r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Voteascand;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}